 sudo pip install virtualenv
 sudo apt-get  update
 sudo pip install --upgrade virtualenv
 sudo   pip install virtualenvwrapper
 sudo  /usr/local/bin/pip  install  virtualenv   -i https://pypi.douban.com/simple/
 sudo  /usr/local/bin/pip2  install   virtualenvwrapper -i https://pypi.douban.com/simple/
 mkdir  -p  $WORKON_HOME
(h4) sige@sige1:~/Desktop$  sudo vim ~/.bashrc
export WORKON_HOME=$HOME/.virtualenvs
source /usr/local/bin/virtualenvwrapper.sh
sige@sige1:~$ source   ~/.bashrc
cd  Desktop/
mkvirtualenv  h4
sige@sige1:~$ mkvirtualenv -p /usr/bin/python  h5
(h4) sige@sige1:~/Desktop$ deactivate
sige@sige1:~/Desktop$
sige@sige1:~/Desktop$ workon h4
(h4) sige@sige1:~/Desktop$ pip  list
Package    Version
---------- -------
pip        19.2.1
setuptools 41.0.1
wheel      0.33.4
(h4) sige@sige1:~/Desktop$ pip  install django==1.8.2
(h4) sige@sige1:~/Desktop$ pip  freeze
Django==1.8.2
(h4) sige@sige1:~/Desktop$ pip  list
Package    Version
---------- -------
Django     1.8.2
pip        19.2.1
setuptools 41.0.1
wheel      0.33.4
(h4) sige@sige1:~/Desktop$ mkdir  projects
(h4) sige@sige1:~/Desktop$ cd  projects/
(h4) sige@sige1:~/Desktop/projects$ django-admin  startproject test1
(h4) sige@sige1:~/Desktop/projects$ ls
test1
(h4) sige@sige1:~/Desktop/projects$ cd test1
(h4) sige@sige1:~/Desktop/projects/test1$ ls
manage.py  test1
(h4) sige@sige1:~/Desktop/projects/test1$ cd  test1
(h4) sige@sige1:~/Desktop/projects/test1/test1$ ls
__init__.py  settings.py  urls.py  wsgi.py
(h4) sige@sige1:~/Desktop/projects/test1/test1$ cat __init__.py
(h4) sige@sige1:~/Desktop/projects/test1/test1$
(h4) sige@sige1:~/Desktop/projects/test1/test1$ cd  ..
(h4) sige@sige1:~/Desktop/projects/test1$ tree  .
.
├── manage.py
└── test1
    ├── __init__.py
    ├── settings.py
    ├── urls.py
    └── wsgi.py

1 directory, 5 files
(h4) sige@sige1:~/Desktop/projects/test1$ pwd
/home/sige/Desktop/projects/test1
(h4) sige@sige1:~/Desktop/projects/test1$ python   manage.py  startapp booktest
(h4) sige@sige1:~/Desktop/projects/test1$ ls
booktest  manage.py  test1
(h4) sige@sige1:~/Desktop/projects/test1$ tree  booktest
booktest
├── admin.py
├── __init__.py
├── migrations
│   └── __init__.py
├── models.py
├── tests.py
└── views.py

1 directory, 6 files
(h4) sige@sige1:~/Desktop/projects/test1$ python  manage.py  runserver 8080
Performing system checks...

System check identified no issues (0 silenced).

You have unapplied migrations; your app may not work properly until they are applied.
Run 'python manage.py migrate' to apply them.

August 01, 2019 - 02:46:45
Django version 1.8.2, using settings 'test1.settings'
Starting development server at http://127.0.0.1:8080/
Quit the server with CONTROL-C.
[01/Aug/2019 02:47:21]"GET / HTTP/1.1" 200 1767
[01/Aug/2019 02:47:21]"GET /favicon.ico HTTP/1.1" 404 1935
ubutu16.04的pycharm要ctrl+s保存不然修改不生效
(h4) sige@sige1:~/Desktop/projects/test1$ python manage.py makemigrations
Migrations for 'booktest':
  0001_initial.py:
    - Create model BookInfo
    - Create model HeroInfo
(h4) sige@sige1:~/Desktop/projects/test1$ python manage.py migrate
Operations to perform:
  Synchronize unmigrated apps: staticfiles, messages
  Apply all migrations: sessions, auth, booktest, contenttypes, admin
Synchronizing apps without migrations:
  Creating tables...
    Running deferred SQL...
  Installing custom SQL...
Running migrations:
  Rendering model states... DONE
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying booktest.0001_initial... OK
  Applying sessions.0001_initial... OK
  (h4) sige@sige1:~/Desktop/projects/test1$ python  manage.py shell
Python 3.5.2 (default, Nov 12 2018, 13:43:14)
[GCC 5.4.0 20160609] on linux
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from  booktest.models import *
>>> b=BookInfo()
>>> b.btitle='abc'
>>> from datetime import datetime
>>> b.bpub_date=datetime(year=1990,month=1,day=12)
>>> b.save()
/home/sige/.virtualenvs/h4/lib/python3.5/site-packages/django/db/models/fields/__init__.py:1474: RuntimeWarning: DateTimeField BookInfo.bpub_date received a naive datetime (1990-01-12 00:00:00) while time zone support is active.
  RuntimeWarning)
>>> BookInfo.objects.all()
[<BookInfo: BookInfo object>]
>>> exit()
(h4) sige@sige1:~/Desktop/projects/test1$ python  manage.py shell
Python 3.5.2 (default, Nov 12 2018, 13:43:14)
[GCC 5.4.0 20160609] on linux
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from booktest.models import *
>>> BookInfo.objects.all()
[<BookInfo: abc>]
>>> b=BookInfo.objects.get(pk=1)
>>> b.btitle='123'
>>> b.save()
>>> BookInfo.objects.all()
[<BookInfo: 123>]
>>> b.delete()
>>> BookInfo.objects.all()
[]
>>>ctrl+d
(h4) sige@sige1:~/Desktop/projects/test1$ python manage.py createsuperuser
Username (leave blank to use 'sige'): abc
Email address: abc@163.com
Password: 123
Password (again): 123
Superuser created successfully.
(h4) sige@sige1:~/Desktop/projects/test1$ python manage.py runserver
Performing system checks...

System check identified no issues (0 silenced).
August 01, 2019 - 05:07:26
Django version 1.8.2, using settings 'test1.settings'
Starting development server at http://127.0.0.1:8000/
Quit the server with CONTROL-C.

http://127.0.0.1:8000/admin

虚拟环境:workon,mkvirtualenv,rmvirtualenv,deactivate
        pip list,pip install
django的命令:django-admin startproject
            python manage.py startapp
            python manage.py makemigrations
            python manage.py migrate
            python manage.py runserver
            python manage.py createsuperuser
admin的使用:admin.py
           admin.site.register(模型类,admin类)