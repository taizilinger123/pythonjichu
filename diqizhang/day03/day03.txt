1.计算机的核心是CPU,CPU承担了所有的计算任务
2.一个CPU核心一次只能执行一个任务
  多个CPU核心同时可以执行多个任务
3.一个CPU一次只能执行一个进程，其他进程处于非运行状态
4.进程里包含的执行单元叫线程
  一个进程 可以包含多个线程。
5.一个进程的内存空间是共享的，每个进程里的线程都可以使用这个共享的空间
  一个线程在使用这个共享的时候，其他线程必须等它结束。
6.通过"互斥锁"实现,作用就是防止多个线程使用这块内存空间。
  先使用的线程会将空间上锁，其他线程就在门口等待，打开锁再进去

进程：表示程序的一次执行
线程：CPU运算的基本调度单位

GIL:Python里的执行通行证，而且只有一个。拿到通行证的线程就可以进去CPU执行任务。
没有就干瞪眼。

Python 的多线程适用于：大量密集的I/O处理
Python 多进程：大量的密集并行计算

sige@sige1:~/pythonjichu/diqizhang/day03$ sudo pip install selenium==2.48.0
sudo apt-get install build-essential chrpath libssl-dev libxft-dev libfreetype6-dev libfreetype6 libfontconfig1-dev libfontconfig1 -y
sudo wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2
sudo tar xvjf phantomjs-2.1.1-linux-x86_64.tar.bz2 -C /usr/local/share/
sudo ln -s /usr/local/share/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin/
phantomjs --version
phantomjs
phantomjs> phantom.version
sige@sige1:~$ ipython
In [1]: from  selenium import webdriver
In [4]: driver = webdriver.PhantomJS()
In [5]: driver.get("http://www.baidu.com/")
In [6]: driver.save_screenshot("baidu.png")
Out[6]: True
In [8]: from selenium.webdriver.common.keys  import Keys
In [9]: driver.find_element_by_id("kw").send_keys(u"美女")
In [10]: driver.save_screenshot("baidu.png")
Out[10]: True
In [12]: print driver.page_source
In [13]: driver.get_cookies()
sudo apt-get install tesseract-ocr -y 
sudo apt-get install python-imaging -y 
sudo pip install pytesseract -y 
tesseract fonts_test.png test
cat test.txt
tesseract tesseracttest.jpg text2.txt
cat text2.txt.txt

